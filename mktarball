#!/bin/bash -e

# SETTINGS
DEBIAN_MIRROR=ftp://ftp.de.debian.org/debian/
DEBIAN_RELEASE=wheezy
IUSER=imx6
PASSWORD=linux

# make sure the build-area is clean
if [ -e "build" ]; then
	echo Error: a file or directory called \"build\" exists already!
	exit 1
fi

if [ "x$UID" != "x0" ]; then
	echo Error: This script requires root privileges!
	exit 1
fi

# functions
chroot_run() {
	cmd="$@"
	chroot "build" $cmd
}

fetch() {
	if [ ! -e "`basename $1`" ]; then
		wget "$1"
	fi
}

# create build-directory to debootstrap into
mkdir build

# install base system
echo Running debootstrap as root
debootstrap --arch=armhf $DEBIAN_RELEASE build $DEBIAN_MIRROR

# add BSP repo
cat > build/etc/apt/sources.list.d/bsp.list << EOF
deb http://repo.maltegrosse.de/debian/wheezy/bsp_cuboxi/ ./
deb-src http://repo.maltegrosse.de/debian/wheezy/bsp_cuboxi/ ./
EOF
curl -k http://repo.maltegrosse.de/debian/wheezy/bsp_cuboxi/Release.key | chroot_run apt-key add -

# pin packages from bsp repo with higher priority
cat > build/etc/apt/preferences.d/bsp-cubox-i << EOF
Package: *
Pin: release o=obs://mx6bs/BSP:Cubox-i/Debian_Wheezy
Pin-Priority: 600
EOF

# install required packages for cubox-i
chroot_run apt-get update
chroot_run apt-get install -y kernel-cubox-i u-boot-cubox-i bsp-cuboxi irqbalance-imx

# create boot files
cd build/boot
ln -sv zImage-* zImage
cat > uEnv.txt << EOF
mmcargs=setenv bootargs root=/dev/mmcblk0p1 rootfstype=ext4 rootwait console=tty
EOF
cd ../..

# install base system
chroot_run apt-get install -y sudo

# install X11 base packages
chroot_run apt-get install -y xserver-xorg-core xserver-xorg-video-imx-viv gpu-viv-bin-x11
chroot_run apt-get install -y xdm xinit openbox xterm

# install chromium
chroot_run apt-get install -y chromium-browser gpu-viv-bin-x11-dev

# set standard runlevel 5
sed -i 's;id:[0-9]:initdefault:;id:5:initdefault:;g' build/etc/inittab

# install xorg config file
cat > build/etc/X11/xorg.conf << EOF
Section "Device"
    Identifier  "i.MX Accelerated Framebuffer Device"
    Driver      "vivante"
    Option      "fbdev"     "/dev/fb0"
    Option      "vivante_fbdev" "/dev/fb0"
    Option      "HWcursor"  "false"
EndSection

Section "ServerFlags"
    Option "BlankTime"  "0"
    Option "StandbyTime"  "0"
    Option "SuspendTime"  "0"
    Option "OffTime"  "0"
EndSection
EOF

# add shutdown/reboot to XDM
#cat >> build/etc/X11/xdm/Xsetup << EOF
#
#(
#EXIT=0
#
#while [[ "$EXIT" == "0" ]]; do
#
#  xmessage -buttons Shutdown:20,Reboot:21 "" ;
#  CONTROL=$?;
#  if [ "$CONTROL" = 20 ] ; then
#    /sbin/shutdown -h now 2>/dev/console >/dev/console;
#  elif [ "$CONTROL" = 21 ] ; then
#    /sbin/shutdown -r now 2>/dev/console >/dev/console;
#  else
#    EXIT=1
#    echo "Xmessage closed on `date`";
#  fi
#
#done
#)&
#EOF
#cat >> build/etc/X11/xdm/Xresources << EOF
#
#Xmessage*geometry:              240x30+1100+1160
#EOF

# create standard user
encrypted_password=`perl -e 'print crypt($ARGV[0], "password")' $PASSWORD`
chroot_run useradd -G sudo,audio,video -m -U -s /bin/bash -p $encrypted_password $IUSER

# cleanup
rm -f build/etc/resolv.conf

# configure network
cat >> build/etc/network/interfaces << EOF

auto eth0
iface eth0 inet dhcp
EOF

# autostart chromium
mkdir -p build/home/$IUSER/.config/openbox
cat > build/home/$IUSER/.config/openbox/autostart << EOF
chromium --start-maximized &
EOF

# create tarball
cd build
tar cf ../mxchrome.tar *
cd ..
pxz -9 mxchrome.tar
